---
title: "En titel som är intressant"
subtitle: "En djupdykning i hur man kan göra riktigt bra rapporter"
title-block-banner: true
title-block-color: "#FFFFFF"
author-title: "Utgivare"
author: "Region Halland, <br> Avdelningen för analys och samordning, <br> Robin Rikardsson"
date: "2025-04-21"
date-format: "D MMMM YYYY"
format:
  html:
    theme: 
      - default
      - rh_style.scss
    toc: true
    toc-location: left
    toc-depth: 3
    toc-title: "Innehåll"
    grid:
      sidebar-width: 300px    # Bredd på sidomenyn
      body-width:   800px     # Behåll standard för brödtext
      margin-width: 100px     # Minskar högermarginalen
      gutter-width: 2rem      # Ökar avståndet mellan kolumnerna
    code-fold: true
    highlight-style: tango
    df-print: kable
    code-overflow: wrap
    smooth-scroll: true
    css: rh_style.scss
    self-contained: true
    lang: sv
editor: visual
execute:
  echo: false
  warning: false
  message: false
---

```{r}
source(here::here('graftema.R'))
```


# Vikten av ett professionellt första intryck

Rapporter är ofta den primära kanalen för att kommunicera resultat, analyser och rekommendationer. Oavsett hur gediget innehållet är, kommer rapportens visuella utformning att vara det första mottagaren möter. En slarvigt utformad rapport med inkonsekvent typografi, rörig layout och undermåliga grafer riskerar att underminera trovärdigheten hos både avsändaren och själva innehållet. Omvänt signalerar en stilren, välstrukturerad och grafiskt korrekt rapport professionalism, noggrannhet och respekt för mottagarens tid. Detta första intryck kan vara avgörande för hur rapportens budskap tas emot och huruvida dess slutsatser leder till handling. Investeringen i god design är därför inte bara en fråga om estetik, utan en direkt investering i rapportens genomslagskraft och effekt.


```{r}
#| label: fig-credibility-consistent
#| fig-cap-location: bottom
#| fig-column: screen-inset-right
#| fig-cap: |
#|   Kioskvältningar i Sverige som följd av rapportsläpp (1950-2024)
#|   <br><strong><small>Notering:</strong> För att definieras som kiosk behöver man sälja korv och snus. Defintionen av "vält" är att mjukglassmaskinen har fallit till golvet. </small>
#| fig-alt: "Massa klok alternativtext"
#| fig-align: center
#| fig-width: 8
#| fig-asp: 0.75
#| fig-format: svg
#| class: pop-plot
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggrepel)
library(ggplot2)
# Skapa exempeldata
set.seed(123)
# 10 regioner plus Riket (Sveriges faktiska regioner)
regioner <- c("Halland", "Stockholm", "Västra Götaland", "Skåne", "Uppsala", 
              "Östergötland", "Jönköping", "Kronoberg", "Kalmar", "Blekinge", "Riket")
år <- 2000:2020
data <- data.frame()
# Skapa lite unika mönster för varje region
for (region in regioner) {
  # Riket får ett eget mönster som är ungefär genomsnittet plus lite variation
  if (region == "Riket") {
    base_mean <- 0.4  # Något lägre än genomsnittet
    base_sd <- 0.2    # Mindre volatil
  } 
  # Halland lite bättre än genomsnittet
  else if (region == "Halland") {
    base_mean <- 0.7
    base_sd <- 0.25
  }
  else {
    # Resten av regionerna får varierade utvecklingskurvor
    base_mean <- 0.5 + match(region, regioner[!(regioner %in% c("Riket", "Halland"))])/15
    base_sd <- 0.3
  }

  region_data <- data.frame(
    year = år,
    value = cumsum(rnorm(length(år), mean = base_mean, sd = base_sd)),
    region = region
  )
  data <- rbind(data, region_data)
}
# Definiera vilka regioner som ska framhävas 
# Halland och Riket är våra huvudregioner
highlight_regions <- c("Halland", "Riket")
# Använd konsekvent färgschema från halland_colors
# Halland får alltid den mörka grönblåa färgen
# Riket får den dammiga röda färgen
halland_main_color <- halland_colors[1]  # "
#005A4D" - Mörk grönblå för Halland
riket_color <- halland_colors[3]         # "
#B33D4A" - Dammig röd/rost för Riket
highlight_colors <- c(halland_main_color, riket_color)
names(highlight_colors) <- highlight_regions
# Bearbeta data för att förenkla plottningen
data$highlight <- data$region %in% highlight_regions
# Skapa grafen med ggplot och halland-temat
ggplot(data, aes(x = year, y = value, group = region)) +
  # Först de icke-framhävda regionerna
  geom_line(data = subset(data, !highlight), 
            color = "gray75", size = 0.4, alpha = 0.6) +
  # Sedan de framhävda regionerna
  geom_line(data = subset(data, highlight), 
            aes(color = region), size = 1.4) +
  scale_color_manual(values = highlight_colors) +
  scale_x_continuous(limits = c(min(data$year), max(data$year)), expand = c(0, 0)) +
  # Lägg till etiketter för framhävda regioner
  geom_text(data = subset(data, highlight & year == max(year)), 
            aes(label = region, color = region), 
            hjust = -0.1, vjust = 0.5) +
  coord_cartesian(clip = "off") +
  theme_halland() +
  theme(plot.margin = margin(r = 60, l = 10, b = 10, t = 10, unit = "pt"),
        legend.position = "none") +
  labs(title = "Kioskvältningarna har ökat i Halland",
       subtitle = "Jämförelse mellan Halland, Riket och övriga regioner",
       caption = "Källa: Exempeldata")

```

## Grafisk korrekthet: Nyckeln till förståelse

Utöver den övergripande layouten är kvaliteten på de enskilda graferna och visualiseringarna avgörande. "Grafisk korrekthet" handlar om att välja rätt diagramtyp för datan, använda tydliga och informativa axlar och etiketter, undvika vilseledande skalor och säkerställa att färg och form används på ett sätt som underlättar tolkning snarare än försvårar den. En felaktigt vald graf (t.ex. en plottrig cirkeldiagram för att jämföra många små delar) eller en graf med otydliga axlar kan leda till missförstånd och felaktiga slutsatser, även om den underliggande datan är korrekt. En välgjord visualisering, å andra sidan, kan på ett ögonblick förmedla komplexa samband och trender som skulle vara svåra att urskilja i en tabell eller löpande text. Dålig grafisk design leder ofta till att läsaren tappar intresset eller feltolkar informationen, medan god grafisk design fångar uppmärksamheten och leder till snabbare och mer korrekt förståelse.

```{r}
#| label: fig-kiosk-valting1
#| fig-cap-location: bottom
#| fig-column: screen-inset-right
#| fig-cap: |
#|   Svenska regioner med lägst & högst antal kioskvältningar efter rapportsläpp
#|   <br><strong><small>Notering:</strong> För att definieras som kiosk behöver man sälja korv och snus. Defintionen av "vält" är att mjölkglassmaskinen har fallit till golvet.</small>
#| fig-alt: "Ett stapeldiagram som visar svenska regioner med lägst och högst antal kioskvältningar efter rapportsläpp, med Halland och Blekinge särskilt framhävda"
#| fig-align: center
#| fig-width: 8
#| fig-asp: 0.75
#| fig-format: svg
#| class: pop-plot
library(ggplot2)
library(dplyr)
library(tidyverse)
# Skapa data för kioskvältningar
kiosk_data <- tibble(
  region = c("Jämtland", "Dalarna", "Blekinge", 
             "Västerbotten", "Kronoberg", "Västmanland",
             "Värmland", "Stockholm", "Skåne", 
             "Västra Götaland", "Halland"),
  
  valtningar = c(1.2, 1.8, 2.3, 
                 3.9, 4.2, 5.0,
                 8.7, 9.2, 10.6, 
                 12.3, 15.8),
  
  # Ny kategori där vi bara fokuserar på Halland och Blekinge
  kategori = case_when(
    region == "Halland" ~ "Halland",
    region == "Blekinge" ~ "Blekinge",
    TRUE ~ "Övriga regioner"
  )
)
# Ordna regionerna efter antal kioskvältningar
kiosk_data$region <- factor(kiosk_data$region, levels = kiosk_data$region)

# Definiera färger från halland_colors
halland_color <- halland_colors[1]   # Mörkgrön färg för Halland
blekinge_color <- halland_colors[3]  # Dammig röd/rost färg för Blekinge
other_color <- "grey70"              # Grå för övriga regioner

# Skapa vektorerna för färgsättning av staplar och text
text_colors <- ifelse(kiosk_data$kategori == "Övriga regioner", "grey50", "black")
bar_colors <- c("Halland" = halland_color, "Blekinge" = blekinge_color, "Övriga regioner" = other_color)

# Skapa grafen
ggplot(kiosk_data, aes(x = region, y = valtningar, fill = kategori)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = bar_colors) +
  # Använd text_colors för att differentiera etiketter
  geom_text(aes(label = paste0(valtningar), color = kategori), 
            hjust = -0.2, size = 3.5) +
  scale_color_manual(values = c("Halland" = "black", "Blekinge" = "black", "Övriga regioner" = "grey50")) +
  labs(
    title = "Svenska regioner med lägst & högst antal kioskvältningar",
    subtitle = "Antal kioskvältningar per 100 000 invånare efter regionala rapportsläpp",
    x = NULL,
    y = NULL
  ) +
  scale_y_continuous(limits = c(0, 18), expand = c(0,0)) +
  theme_halland() +
  theme(
    legend.position = "none",  # Ta bort legenden
    # Vänsterjustera etiketter på y-axeln
    axis.text.y = element_text(
      size = 10,
      color = ifelse(levels(kiosk_data$region) %in% c("Halland", "Blekinge"), "black", "grey50")
    ),
    axis.text.x = element_blank(),  # Ta bort x-axelns text
    axis.ticks.x = element_blank(),  # Ta bort x-axelns ticks
    axis.line.x = element_blank(),   # Ta bort x-axelns linje
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_blank(),
    plot.title = element_text(face = "bold", size = 14),
    plot.margin = margin(t = 10, r = 20, b = 15, l = 10)
  ) +
  # Lägg till en fotnot med information
  labs(caption = "Källa: Institutet för Kioskvältning & Rapportdesign")
```

## Kausalitet mellan produktion och vältning?

Kausalitet mellan produktion och vältning?
Analysen visar ett tydligt samband mellan regionernas genomsnittliga R-kodproduktion och antalet kioskvältningar. Regioner med högre kodproduktion, särskilt Halland, uppvisar signifikant fler kioskvältningar per 100 000 invånare. Detta kan förklaras av den högre stressnivån hos programmerare i regioner med intensiv kodproduktion, vilket leder till mer impulsiva kioskbesök och därmed ökad risk för vältningar.

Intressant nog avviker Blekinge från detta mönster. Trots relativt hög kodproduktion uppvisar regionen få kioskvältningar, vilket kan förklaras av den unika "Blekingemodellen" där programmerare uppmuntras till regelbundna pauser och ergonomiska kioskbesök.

Studien kan dock inte utesluta omvänd kausalitet - att just kioskvältningar inspirerar till mer kodproduktion genom det välkända fenomenet "debuggningshunger" som ofta drabbar programmerare efter oväntade händelser i vardagen. Ytterligare studier behövs för att klargöra orsaksriktningen i detta fascinerande samband.

```{r}
#| label: fig-kod-valtningar
#| fig-cap-location: bottom
#| fig-column: screen-inset-right
#| fig-cap: |
#|   Samband mellan R-kodproduktion och kioskvältningar i svenska regioner
#|   <br><strong><small>Notering:</strong> Regionens kodproduktion mäts som genomsnittligt antal tecken per R-script.</small>
#| fig-alt: "En scatterplot som visar sambandet mellan R-kodproduktion och kioskvältningar i svenska regioner, med Halland och Blekinge särskilt framhävda"
#| fig-align: center
#| fig-width: 8
#| fig-asp: 0.75
#| fig-format: svg
#| class: pop-plot
#| 
library(ggplot2)
library(dplyr)
library(ggrepel)  # För att använda geom_text_repel

# Skapa hittepådata för kodproduktion och kioskvältningar
set.seed(123)  # För reproducerbarhet
scatter_data <- tibble(
  region = c("Jämtland", "Dalarna", "Blekinge", 
             "Västerbotten", "Kronoberg", "Västmanland",
             "Värmland", "Stockholm", "Skåne", 
             "Västra Götaland", "Halland"),
  
  kod_produktion = c(15000, 18000, 32000,  # Lägre värden
                    22000, 24000, 26000,   # Medelvärden
                    28000, 34000, 36000,   # Högre värden
                    38000, 42000),         # Högst värden
  
  valtningar = c(1.2, 1.8, 2.3, 
                 3.9, 4.2, 5.0,
                 8.7, 9.2, 10.6, 
                 12.3, 15.8),
  
  # Kategori för att markera Halland och Blekinge
  kategori = case_when(
    region == "Halland" ~ "Halland",
    region == "Blekinge" ~ "Blekinge",
    TRUE ~ "Övriga regioner"
  )
)

# Beräkna riksgenomsnitt för kod_produktion och valtningar
riks_kod_produktion <- mean(scatter_data$kod_produktion)
riks_valtningar <- mean(scatter_data$valtningar)

# Definiera färger från halland_colors (antar samma färger som tidigare)
halland_color <- halland_colors[1]   # Mörkgrön färg för Halland
blekinge_color <- halland_colors[3]  # Dammig röd/rost färg för Blekinge
other_color <- "grey70"              # Grå för övriga regioner

# Skapa scatterplot
ggplot(scatter_data, aes(x = kod_produktion, y = valtningar)) +
  # Lägg till genomsnittslinjer
  geom_hline(yintercept = riks_valtningar, linetype = "dashed", color = "grey40", alpha = 0.7) +
  geom_vline(xintercept = riks_kod_produktion, linetype = "dashed", color = "grey40", alpha = 0.7) +
  
  # Lägg till punkter med olika storlek baserat på kategori
  geom_point(aes(color = kategori, size = kategori)) +
  scale_color_manual(values = c("Halland" = halland_color, 
                               "Blekinge" = blekinge_color, 
                               "Övriga regioner" = other_color)) +
  scale_size_manual(values = c("Halland" = 4, 
                              "Blekinge" = 4, 
                              "Övriga regioner" = 2)) +
  
  # Lägg till etiketter endast för highlightade regioner med repel
  geom_text_repel(
    data = filter(scatter_data, kategori %in% c("Halland", "Blekinge")),
    aes(label = region),
    box.padding = 0.5,
    point.padding = 0.3,
    force = 10,
    segment.color = "grey50"
  ) +
  
  # Annotera riksgenomsnittet
  annotate("text", x = riks_kod_produktion + 2000, y = riks_valtningar - 1, 
           label = "Riksgenomsnitt", size = 3, color = "grey40") +
  
  # Lägg till titel och axlar
  labs(
    title = "Samband mellan R-kodproduktion och kioskvältningar",
    subtitle = "Antal kodtecken i R jämfört med kioskvältningar per 100 000 invånare",
    x = "R-kodproduktion (antal tecken)",
    y = "Kioskvältningar per 100 000 invånare",
    caption = "Källa: Institutet för Kioskvältning & Rapportdesign"
  ) +
  
  # Använd tema från tidigare (theme_halland)
  theme_halland() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 14),
    plot.subtitle = element_text(size = 11),
    axis.title = element_text(size = 10),
    panel.grid.minor = element_blank(),
    plot.margin = margin(t = 10, r = 20, b = 15, l = 10)
  )
```

